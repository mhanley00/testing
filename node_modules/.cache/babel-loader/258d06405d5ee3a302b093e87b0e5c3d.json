{"ast":null,"code":"import _classCallCheck from \"/Users/mhanley/apps/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mhanley/apps/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mhanley/apps/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mhanley/apps/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mhanley/apps/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mhanley/apps/test/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mhanley/apps/test/src/AppChild.js\";\nimport React, { Component } from 'react';\nimport './AppChild.css';\nimport City from './City.js';\n\nvar AppChild =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppChild, _Component);\n\n  function AppChild(props) {\n    var _this;\n\n    _classCallCheck(this, AppChild);\n\n    console.log('Hello! ðŸ‡ºðŸ‡¸');\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppChild).call(this, props));\n    _this.state = {\n      // USA: false,\n      // France: false,\n      place: 'NYC',\n      date: new Date(),\n      center: [-74.0060, 40.7128]\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AppChild, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.value;\n      this.setState({\n        place: value\n      });\n\n      if (value === 'Paris') {\n        // OLD CODE\n        // let usaDate = new Date();\n        // usaDate.getHours();\n        // let franceDate = ((usaDate.getHours() + 6)+':'+usaDate.getMinutes()).toString();\n        // console.log(franceDate);\n        //NEW way https://www.techrepublic.com/article/convert-the-local-time-to-another-time-zone-with-this-javascript/\n        d = new Date();\n        utc = d.getTime() + d.getTimezoneOffset() * 60000;\n        nd = new this.setState({\n          date: franceDate,\n          center: [2.3522, 48.8566]\n        });\n      } else {\n        this.setState({\n          date: new Date(),\n          center: [-74.0060, 40.7128]\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('Salut!ðŸ‡«ðŸ‡·');\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {//if USA is true, then change France to false, if France is true, change USA to false\n      // time in Paris = NYC + 6hrs\n      // state.USA === true? arcgis.mapView.center = [-74.0060, 40.7128];\n      // state.France === true? arcgis.mapView.center = [2.3522, 48.8566];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Select A Country\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"USA\", React.createElement(\"input\", {\n        type: \"radio\",\n        checked: this.state.place === 'NYC',\n        name: \"city\",\n        value: \"NYC\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"France\", React.createElement(\"input\", {\n        type: \"radio\",\n        checked: this.state.place === 'Paris',\n        name: \"city\",\n        value: \"Paris\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }))), React.createElement(City, {\n        place: this.state.place,\n        date: this.state.date.toString(),\n        center: this.state.center.toString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AppChild;\n}(Component);\n\nexport default AppChild; //checkbox. input w/ type, checked property T/F based on state","map":{"version":3,"sources":["/Users/mhanley/apps/test/src/AppChild.js"],"names":["React","Component","City","AppChild","props","console","log","state","place","date","Date","center","handleInputChange","bind","event","target","value","setState","d","utc","getTime","getTimezoneOffset","nd","franceDate","toString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './AppChild.css';\nimport City from './City.js';\n\nclass AppChild extends Component {\n\n    constructor(props) {\n        console.log('Hello! ðŸ‡ºðŸ‡¸');\n        super(props);\n        this.state = {\n            // USA: false,\n            // France: false,\n            place: 'NYC',\n            date: new Date(),\n            center: [-74.0060, 40.7128]\n\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n    handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    this.setState({\n       place: value\n    });\n    if (value === 'Paris'){\n\n        // OLD CODE\n        // let usaDate = new Date();\n        // usaDate.getHours();\n        // let franceDate = ((usaDate.getHours() + 6)+':'+usaDate.getMinutes()).toString();\n        // console.log(franceDate);\n\n        //NEW way https://www.techrepublic.com/article/convert-the-local-time-to-another-time-zone-with-this-javascript/\n        d = new Date();\n        utc = d.getTime() +(d.getTimezoneOffset()*60000);\n        nd = new\n\n        this.setState({\n            date: franceDate,\n            center: [2.3522, 48.8566]\n        });\n    } \n    else{\n        this.setState({\n            date: new Date(),\n            center: [-74.0060, 40.7128]\n        });\n    }\n    }\n\n    componentDidMount(){\n        console.log('Salut!ðŸ‡«ðŸ‡·');\n    }\n\n    componentDidUpdate(){\n        \n        \n        //if USA is true, then change France to false, if France is true, change USA to false\n        // time in Paris = NYC + 6hrs\n        // state.USA === true? arcgis.mapView.center = [-74.0060, 40.7128];\n        // state.France === true? arcgis.mapView.center = [2.3522, 48.8566];\n    }\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <label>Select A Country</label><br/>\n                    <label>USA<input type='radio' checked={this.state.place==='NYC'} name='city' value='NYC' onChange={this.handleInputChange} />\n                    </label>\n                    <label>France<input type='radio' checked={this.state.place==='Paris'} name='city' value='Paris' onChange={this.handleInputChange} />\n                    </label>\n                    {/* {this.state.France === true && <img src={Flag_of_France} alt='French Flag' />} */}\n                </form>\n                <City place={this.state.place} \n                date={this.state.date.toString()}\n                center={this.state.center.toString()}\n                />\n                    {/* {this.state.USA === true && <div className='city_container'>You're going to New York City!<img src={Flag_of_USA} alt='French Flag' /></div>}\n                    {this.state.France === true && <div className='city_container'>You're going to Paris!<img src={Flag_of_France} alt='French Flag' /></div>} */}\n                \n            </div>\n        );\n    }\n}\n\nexport default AppChild;\n//checkbox. input w/ type, checked property T/F based on state"]},"metadata":{},"sourceType":"module"}