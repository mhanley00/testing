{"ast":null,"code":"import _defineProperty from \"/Users/mhanley/apps/test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/mhanley/apps/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mhanley/apps/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mhanley/apps/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mhanley/apps/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mhanley/apps/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mhanley/apps/test/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mhanley/apps/test/src/AppChild.js\";\nimport React, { Component } from 'react';\nimport './AppChild.css';\nimport City from './City.js';\n\nvar AppChild =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppChild, _Component);\n\n  function AppChild(props) {\n    var _this;\n\n    _classCallCheck(this, AppChild);\n\n    console.log('Hello! ðŸ‡ºðŸ‡¸');\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppChild).call(this, props));\n    _this.state = {\n      // USA: false,\n      // France: false,\n      place: 'NYC',\n      date: new Date()\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AppChild, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.type === 'radio' ? target.checked : target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('Salut!ðŸ‡«ðŸ‡·');\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {//if USA is true, then change France to false, if France is true, change USA to false\n      // time in Paris = NYC + 6hrs\n      // state.USA === true? arcgis.mapView.center = [-74.0060, 40.7128];\n      // state.France === true? arcgis.mapView.center = [2.3522, 48.8566];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Select A Country\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"USA\", React.createElement(\"input\", {\n        type: \"radio\",\n        checked: this.state.place === 'NYC',\n        name: \"city\",\n        value: \"NYC\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"France\", React.createElement(\"input\", {\n        type: \"radio\",\n        checked: this.state.place,\n        name: \"city\",\n        value: \"Paris\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }))), React.createElement(City, {\n        place: this.state.place,\n        date: this.state.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AppChild;\n}(Component);\n\nexport default AppChild; //checkbox. input w/ type, checked property T/F based on state","map":{"version":3,"sources":["/Users/mhanley/apps/test/src/AppChild.js"],"names":["React","Component","City","AppChild","props","console","log","state","place","date","Date","handleInputChange","bind","event","target","value","type","checked","name","setState"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB;;IAEMC,Q;;;;;AAEF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,kFAAMF,KAAN;AACA,UAAKG,KAAL,GAAa;AACT;AACA;AACAC,MAAAA,KAAK,EAAE,KAHE;AAITC,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AAJG,KAAb;AAOA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAzB;AAVe;AAWlB;;;;sCACiBC,K,EAAO;AAErB,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACE,IAAP,KAAgB,OAAhB,GAA0BF,MAAM,CAACG,OAAjC,GAA2CH,MAAM,CAACC,KAAhE;AACA,UAAMG,IAAI,GAAGJ,MAAM,CAACI,IAApB;AAEA,WAAKC,QAAL,qBACKD,IADL,EACYH,KADZ;AAIH;;;wCAEkB;AACfV,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;;;yCAEmB,CAGhB;AACA;AACA;AACA;AACH;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EACmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADnC,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAU;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,KAAX,KAAmB,KAAhD;AAAuD,QAAA,IAAI,EAAC,MAA5D;AAAmE,QAAA,KAAK,EAAC,KAAzE;AAA+E,QAAA,QAAQ,EAAE,KAAKG,iBAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV,CAFJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAa;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWC,KAAxC;AAA+C,QAAA,IAAI,EAAC,MAApD;AAA2D,QAAA,KAAK,EAAC,OAAjE;AAAyE,QAAA,QAAQ,EAAE,KAAKG,iBAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb,CAJJ,CADJ,EASI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,KAAxB;AAA+B,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CADJ;AAgBH;;;;EAxDkBR,S;;AA2DvB,eAAeE,QAAf,C,CACA","sourcesContent":["import React, { Component } from 'react';\nimport './AppChild.css';\nimport City from './City.js';\n\nclass AppChild extends Component {\n\n    constructor(props) {\n        console.log('Hello! ðŸ‡ºðŸ‡¸');\n        super(props);\n        this.state = {\n            // USA: false,\n            // France: false,\n            place: 'NYC',\n            date: new Date()\n\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n    handleInputChange(event) {\n    \n        const target = event.target;\n        const value = target.type === 'radio' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n\n    }\n\n    componentDidMount(){\n        console.log('Salut!ðŸ‡«ðŸ‡·');\n    }\n\n    componentDidUpdate(){\n        \n        \n        //if USA is true, then change France to false, if France is true, change USA to false\n        // time in Paris = NYC + 6hrs\n        // state.USA === true? arcgis.mapView.center = [-74.0060, 40.7128];\n        // state.France === true? arcgis.mapView.center = [2.3522, 48.8566];\n    }\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <label>Select A Country</label><br />\n                    <label>USA<input type='radio' checked={this.state.place==='NYC'} name='city' value='NYC' onChange={this.handleInputChange} />\n                    </label>\n                    <label>France<input type='radio' checked={this.state.place} name='city' value='Paris' onChange={this.handleInputChange} />\n                    </label>\n                    {/* {this.state.France === true && <img src={Flag_of_France} alt='French Flag' />} */}\n                </form>\n                <City place={this.state.place} date={this.state.date}/>\n                    {/* {this.state.USA === true && <div className='city_container'>You're going to New York City!<img src={Flag_of_USA} alt='French Flag' /></div>}\n                    {this.state.France === true && <div className='city_container'>You're going to Paris!<img src={Flag_of_France} alt='French Flag' /></div>} */}\n                \n            </div>\n        );\n    }\n}\n\nexport default AppChild;\n//checkbox. input w/ type, checked property T/F based on state"]},"metadata":{},"sourceType":"module"}