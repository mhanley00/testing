{"ast":null,"code":"import _defineProperty from \"/Users/mhanley/apps/test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/mhanley/apps/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mhanley/apps/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mhanley/apps/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mhanley/apps/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mhanley/apps/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mhanley/apps/test/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mhanley/apps/test/src/AppChild.js\";\nimport React, { Component } from 'react';\nimport './AppChild.css';\nimport City from './City.js';\n\nvar AppChild =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppChild, _Component);\n\n  function AppChild(props) {\n    var _this;\n\n    _classCallCheck(this, AppChild);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppChild).call(this, props));\n    _this.state = {\n      USA: false,\n      France: false\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AppChild, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Select A Country\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"USA\", React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: this.state.USA,\n        name: \"USA\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"France\", React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: this.state.France,\n        name: \"France\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }))), React.createElement(City, {\n        USA: this.state.USA,\n        France: this.state.France,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AppChild;\n}(Component);\n\nexport default AppChild; //checkbox. input w/ type, checked property T/F based on state","map":{"version":3,"sources":["/Users/mhanley/apps/test/src/AppChild.js"],"names":["React","Component","City","AppChild","props","state","USA","France","handleInputChange","bind","event","target","value","type","checked","name","setState","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB;;IAEMC,Q;;;;;AAEF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE,KADI;AAETC,MAAAA,MAAM,EAAE;AAFC,KAAb;AAKA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAzB;AAPe;AAQlB;;;;sCACiBC,K,EAAO;AACrB,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACE,IAAP,KAAgB,UAAhB,GAA6BF,MAAM,CAACG,OAApC,GAA8CH,MAAM,CAACC,KAAnE;AACA,UAAMG,IAAI,GAAGJ,MAAM,CAACI,IAApB;AAEA,WAAKC,QAAL,qBACKD,IADL,EACYH,KADZ;AAIH;;;wCAEkB;AACfK,MAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACH;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EACmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADnC,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAU;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,EAAE,KAAKb,KAAL,CAAWC,GAA3C;AAAgD,QAAA,IAAI,EAAC,KAArD;AAA2D,QAAA,QAAQ,EAAE,KAAKE,iBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV,CAFJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAa;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWE,MAA3C;AAAmD,QAAA,IAAI,EAAC,QAAxD;AAAiE,QAAA,QAAQ,EAAE,KAAKC,iBAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb,CAJJ,CADJ,EASI,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAE,KAAKH,KAAL,CAAWC,GAAtB;AAA2B,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CADJ;AAgBH;;;;EA3CkBN,S;;AA8CvB,eAAeE,QAAf,C,CACA","sourcesContent":["import React, { Component } from 'react';\nimport './AppChild.css';\nimport City from './City.js';\n\nclass AppChild extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            USA: false,\n            France: false,\n\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n\n    }\n\n    componentDidMount(){\n        console.log('')\n    }\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <label>Select A Country</label><br />\n                    <label>USA<input type='checkbox' checked={this.state.USA} name='USA' onChange={this.handleInputChange} />\n                    </label>\n                    <label>France<input type='checkbox' checked={this.state.France} name='France' onChange={this.handleInputChange} />\n                    </label>\n                    {/* {this.state.France === true && <img src={Flag_of_France} alt='French Flag' />} */}\n                </form>\n                <City USA={this.state.USA} France={this.state.France}/>\n                    {/* {this.state.USA === true && <div className='city_container'>You're going to New York City!<img src={Flag_of_USA} alt='French Flag' /></div>}\n                    {this.state.France === true && <div className='city_container'>You're going to Paris!<img src={Flag_of_France} alt='French Flag' /></div>} */}\n                \n            </div>\n        );\n    }\n}\n\nexport default AppChild;\n//checkbox. input w/ type, checked property T/F based on state"]},"metadata":{},"sourceType":"module"}